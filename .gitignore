# --- .gitignore for the PSArrange PowerShell Project ---
# Purpose: Specify intentionally untracked files that Git should ignore.
# This keeps the repository clean, prevents accidental commits of sensitive data,
# and avoids tracking generated files.

# === Log Files ===
# Ignore the log file generated by the PSArrange script.
# This typically changes with every run and doesn't belong in version control.
organisation.log
*.log

# === Script Backups / Test Files ===
# Ignore temporary backups or differently named test versions of the script.
*.bak
*_sauber.ps1
*_test.ps1
*_alt.ps1

# === Configuration Backups / Secrets ===
# IMPORTANT: Never commit configuration files with sensitive information
# (like real paths on production systems if different, or API keys if added later).
# Add patterns for any sensitive config variations you might create.
# Example:
# config_prod.json
# *.secret.json
# .env

# === OS Generated Files ===
# Ignore common metadata files generated by operating systems.
# Windows:
Thumbs.db
ehthumbs.db
Desktop.ini
# macOS:
.DS_Store

# === Editor/IDE Specific Settings ===
# Ignore configuration directories and files from popular editors to avoid
# user-specific settings cluttering the repository.
.vscode/
.idea/
.vs/
*.suo
*.user

# === PowerShell Specific (Optional) ===
# You might want to ignore local PowerShell module installations
# or profile backups if they end up in the project directory.
# Example:
# Modules/
# ps_profile*

# === Packaging / Build Artifacts (If you use tools like PS2EXE) ===
# Ignore output from script packaging tools.
# Example:
# dist/
# build/
# PSArrange.exe # If you create an executable

# --- End of .gitignore ---